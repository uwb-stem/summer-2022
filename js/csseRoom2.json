{
    "csse": [
        {
            "time": "12:45 PM - 1:00 PM",
            "projectId": "csse-2-1245",
            "title": "US Food & Nutrition",
            "studentName": "Narapady Chhuoy",
            "studentMajor": "CSSE",
            "projectType": "Individual Project",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/chhuoy_narapady.png",
            "abstract": "Digital transformation generates a huge amount of data which makes data management a very daunting task due to the volume, velocity, and variety of the data. Data users such as data analysts, data scientists, and machine learning engineers become less productive because they spend most of their time collecting, cleaning, and processing data before the data is in useable and analysis-ready form. Data cleaning and processing is time consuming and draws them away from their actual expertise which is finding insights from the data. The problem led to the emergence of data engineering. The primary role of a data engineer is building a data infrastructure or pipeline to move data from point A to point B and make it available, usable, and easily accessible by downstream data users.\n\nThe capstone project builds a cloud based ETL (Extract Transform Load) data pipeline that ingests external raw data into the pipeline, transforms, cleans, and stages it. Then load it into a cloud data warehouse which is the destination of the data. To take it one step further, dashboard is built to show case the insights from the data. Specifically, the system ingests raw data from  US Department of Agriculture and Kaggle into AWS S3 cloud storage, performs all the necessary processing, and loads into Snowflake data warehouse to make it available and analysis ready. A data visualization, Superset, is leveraged to host insights found in data as a dynamic dashboard. Methodology wise, because data pipeline involves different components (ingestion, transformation, staging, loading, and visualization), a workflow manager is required to stitch together those components have them communicate with one another. Airflow framework or “workflow as code” is used to programmatically orchestrate the workflows as directed acyclic graph (DAG) which enables convenient pipeline monitoring. The pipeline technology stack leverages cloud technology to optimize scalability, maintainability, and reliability.\n\nThe outcome of the project is the cloud-based data pipeline that is automatable, repeatable, scalable, reliable, and maintainable. On a weekly basis, raw and messy data from external source systems is ingested into the pipeline and landed in the data warehouse in a clean and analysis-ready form. The dashboard is in sync with data in the data warehouse, so it dynamically updated as new data is ingested to the system. Having a data pipeline that makes analysis-ready data available consistently, data users can have quick access to the data and focus on what they do best."
        },
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "csse-2-100",
            "title": "Web Store Payment Application Development for Solana Pay",
            "studentName": "Yonghoon Choi",
            "studentMajor": "CSSE",
            "projectType": "Individual Project",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/choi_yonghoon.jpg",
            "abstract": "Blockchain, cryptocurrency, and web3-related technologies became a great interest of mine after not only experiencing the first development of cryptocurrency but also an extraordinary increase in market size in extremely short periods. The goal of my Capstone Individual Project is to build a web store application that integrates blockchain technology, specifically leveraging Solana Pay, which brings crypto support to an online store. Solana is a blockchain platform it was founded by Yakovenko, in 2017. Solana is one of the most highly used blockchains due to its speed and cheap transaction costs and SOL tokens are Solana cryptocurrencies. I choose Solana over Bitcoin because SOL is not one of the largest cryptocurrencies with a Market Cap of $14.057B but also a platform that provides a lot of different types of program compatibility with other system functions.\n\nThe main objective of the project is to create a web store payment tool that allows customers to pay with Solana-based cryptocurrency. The customer scans a QR code from the website with their mobile devices for payment. QR code interprets as a Solana Pay transaction through the Wallet app (Phantom Wallet). The wallet app sends and confirms blockchain transactions. The merchant finds and validates the transaction. The project design was mainly divided into two different sections which are Front End and Back End. The front-end functionality includes scanning QR codes, interpreting them as Solana Pay transactions, and invoking the wallet app with unique transaction information. The back-end functionality includes sending transaction requests to Solana Blockchain, sending transaction requests to the merchant server from the Solana blockchain, and the merchant server validating the transaction.\n\nThe capstone project gave me a great opportunity to learn about one of the newest and trending computer science fields (blockchain, cryptocurrency). I learned system architecture, requirements, flow, and actual field work about web3, cryptocurrency, and blockchain. I learned how to launch smart contracts for a blockchain, how to test the smart contracts with a personal blockchain, and how to connect a website and online wallet to interact with the smart contract and QR code. I also learned how to use various blockchain-related software tools such as HardHat, Truffle, Alchemy, Phantom Wallet, and Solana Pay. However, most importantly the capstone project allowed me to experience the actual program launching process and how to utilize the knowledge that I learned through my academic years, and how to approach problems to effectively solve it."
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "csse-2-115",
            "title": "ReFocus: A Focus Stacking Web Application",
            "studentName": "Stephen Swetonic",
            "studentMajor": "CSSE",
            "projectType": "Individual Project",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/swetonic_stephen_robert.png",
            "abstract": "My plan was to create a photography application for a technique called focus stacking. In focus stacking, you are trying to get an image where the entire subject is in focus; but with up close macro shots, the depth of field is limited. The process of focus stacking is to take a series of photographs with a camera on a tripod with every depth of field, filter out the blurry regions, then combine the set of images into one. The key question for this application is, how do you measure blurriness of an image? In the computer vision field, finding blurriness/sharpness of a pixel in an image is not trivial and an active area of research. Blurriness is not only a subjective quality, but spatial, i.e., the quality of a single pixel depends on its neighbors. \n\nA research paper by Bolan Su, Shijian Lu, and Chew Lim Tan titled Blurred Image Region Detection and Classification that details a mathematical method for measuring blurriness is the basis of the filtering algorithm. This paper has included a license for usage without fee as long as the use is not for profit. Final image results were successful and don’t require client side processing. All image processing happens on the server and asynchronously. All server side code is written in Python to take advantage of OpenCV and Django. I utilized Celery, a message queue, to allow for multithreading and asynchronous processing on the server. Additionally, The client page communicates with the server to update the results page as processing finishes, to allow for viewing without a stuck web page. Should my project be scaled up, it would be free to use alternative to paid software like Photoshop or Helicon Focus. With more features like user support and some AWS configuration, Elastic beanstalk could easily manage scaling. Additionally, if the processing code was adapted to run on a GPU, performance would be greatly increased."
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "csse-2-130",
            "title": "Responsive Travel Website - Web Development",
            "studentName": "Linh Nguyen",
            "studentMajor": "CSSE",
            "projectType": "Individual Project",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/nguyen_linh.png",
            "abstract": "During this two-quarter process, I learned completely new programming languages as well as other skills to create a complete website.\n\nThe reason that I want to make a travel website is because I simply feel extremely excited when I go to sites like booking.com to pack my luggage and go to new, interesting places, as well as learn more. Along with that, I have not experienced learning about web programming languages. Therefore, I find it overly curious to learn new skills as well as a little nervous because I don't know what difficulties will come.\n\nAfter I started learning the front-end languages including Html, CSS, JavaScript, and Bootstrap from the beginning, I felt quite comfortable and didn't feel any pressure when starting from the lines of code. I implemented my lines of code using Atoms. With that, I started learning about design using Figma. In my mind at that time, I always thought what I wanted my website to be and ended up with color-block website. The two main colors are orange and blue. After completing the design, I consulted friends and conducted a testing for my design to get advice. All the process from learning to starting to learn, then design, and finally code took me about over 4 months.\n\nThen I started learning about PHP and I had a big problem figuring out how to make a website work like domains, hosting, and I'm still learning about it. However, I used SQL to complete part of the back end, which leaves me quite satisfied with what I can do in the short amount of time left. This process can be said to have lasted until now and I will not give up.\n\nWhat I have learned after completing this Capstone beside of learning new programming languages and technology are patience and how to get things done efficiently. A process for myself is exceptionally long, there are continuous difficulties, but I overcame. Design, coding, bug fixing, testing are four words that can be said to have happened throughout my last 6 months."
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "csse-2-145",
            "title": "Backend Development for Cquestip",
            "studentName": "Zaki Shaik",
            "studentMajor": "CSSE",
            "projectType": "Internship - CQUESTIP LLC",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/shaik_zaki.png",
            "abstract": "For my capstone project, I worked as a software designer and backend developer with Cqestip, an education guidance startup, to develop an application that provides tools for students to enhance their education. The project, Nurture, is one of the business-critical applications for Cquestip.\n\nThe purpose of Nurture is to allow students to carry an education portfolio starting from middle school. The education portfolio would track each student's GPA, activities, achievements, and scholarships available at a moment's notice. In addition, the education portfolio will be used by the application to provide students with internships and scholarships matching their criteria. Previously, finding related internships or scholarships based on experience was time-consuming and difficult. Students must never forget all their activities and spend considerable time ensuring they are eligible to apply for specific opportunities. Nurture aims to remove these difficulties by providing a portfolio service and delivering opportunities to students.\n\nTo build the application, I had to spend time working with my colleagues on the design. The first step of the design was to discover the application's essential features, which were derived by creating user scenarios. Next, I developed a flat database design to speed up data retrieval. I also designed the backend architecture, with scalability and performance being the main pillars behind the design. The scalability of the application was achieved by creating it following horizontal scaling.\n\n  Once the application's design was finalized, I worked on the backend education portfolio feature for Nurture. We used Flask, Mongo DB, and JWT for the backend. One of the significant challenges faced in the development was performance issues. In one of the earlier prototypes, we noticed that executing queries on JsonB columns was extremely slow. We had to switch our databases from Postgres to MongoDB to overcome the issue. MongoDB allowed us to achieve the same design without the drawbacks by using embedded documents.\n\nNurture is still in a prototype phase, but it is already a critical part of Cquestip. The application in the future will provide many students the opportunity to pursue greater heights in their education. The application will empower them by providing their portfolio of experiences needed for critical opportunities to grow as a student.\n\n Overall, this project provided me with a great opportunity. I gained real-world development experience that prepared me for the rest of my career. I gained a new understanding of building projects, from designing to building the backend."
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "csse-2-200",
            "title": "Software Development for a Task Management Tool",
            "studentName": "Madeline Nguyen",
            "studentMajor": "CSSE",
            "projectType": "Internship - Liberty Mutual",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/nguyen_madeline_ngoc.png",
            "abstract": "For this Capstone project, I will be spending twelve weeks working full time (40 hours per week) on a task management simplification software.  This software would be able to help bring forth reduced expenses and process improvement, help track productivity and efficiency levels, evaluate the content of work and volume of work, and track completed work and check their corresponding schedules.  This software will also allow easy sharing of documents among multiple team members and be able to process many supporting tasks such as webforms, emails, and system referrals.  For this project’s timeline, I am working in two-week long sprints, communicating closely with my manager and scrum master, as well as other developers on my team.  As the only intern on the team, I have taken the responsibility of asking as many questions as I can in order to learn as much as I can in the short time frame that I have, and making sure of my growth as a young professional.\n\nThis application yields many benefits, especially to customers, operators, and managers.  For example, customers will likely have better service prices with higher quality of work, as well as increased service speeds.  Managers would need to worry less about distributing task work to other employees since the software is heavily automated.  This project would also give managers more insight into the tasks and the people assigned to the tasks, which would in turn increase the principle of continuous improvement.\n\nAll in all, over the past several weeks, I have learned a lot about agile software development, working as a professional in a team environment, how to debug and work life balance.  I will continue to learn and grow throughout the rest of my internship."
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "csse-2-215",
            "title": "Audience-DB-Analyzer: Software Engineering Internship",
            "studentName": "Mitiku Madeksa",
            "studentMajor": "CSSE",
            "projectType": "Internship - Nordstrom",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/madeksa_mitikut.png",
            "abstract": "Audience-DB-Analyzer: Software Engineering Internship\n\nMy team owns a giant database with millions of records, and there is limited visibility into this database. To get an answer to simple questions about our data in a database, users must open up SQL workbench, craft queries, and wait for the results. This process has some obvious drawbacks:\n\n• Manual process that takes engineers' time\n\n• Useful questions are not documented, so they are rewritten each time a different engineer wants to run them\n\n• Query results aren't available when we need them\n\nThe proposed solution was to build a platform that allows engineers, managers, and product owners to learn about the data in our database easily. The system should be simple to add queries to the platform, so I built an abstraction that allows for a configuration-based approach to adding new queries. The platform supports gauge-based queries that report on a single number and facet queries that support counts based on an attribute's value set. The queries are executed on cadence so that their result can be referred to at any time. The reporting platform is a new relic, which is a tool that provides application monitoring. I used it for two purposes: report the results of common questions and explain the results of each question. If users need to run new queries, they simply add them to the platform and get the outputs on the new relic dashboard. \n\nThe outcome of this project is that currently, managers, product owners, and engineers are using the platform to learn about data in our database by simply visiting a new relic website. This cuts the time they waste on the manual process and help them in rapidly make better-informed decisions for effective strategizing, which can improve the operations, and benefits other areas of strategic decision-making."
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "csse-2-230",
            "title": "Research and Development for UNT",
            "studentName": "Shubham Kamboj",
            "studentMajor": "CSSE",
            "projectType": "Internship - University of North Texas",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/kamboj_shubham.jpeg",
            "abstract": "Ransomware has shown an increasing significance in society as the number of attacks every year keeps growing. Ransomware is used to attack a user's computer by encrypting important files and force them to pay a ransom to unlock their data. Keeping this in mind, I decided to investigate deeper in finding tools that would help in stopping a ransomware attack before it was executed. \n\nThe initial research conducted during the internship discusses various types of ransomware and ransomware monitoring tools. First step was to produce ransomware replicated attacks on a virtual machine to learn about its behavior and the intricacies behind what is happening in the system during an attack. Post controlled ransomware attacks, a deep dive was conducted into software available today to stop ransomware. Doing such extensive preliminary research gave the team context on the environment and how to approach the project in the most efficient manner possible.\n\n After exploring both sides of the attack and defend relationship, my team compiled various attributes in the system that are essential in monitoring when looking for a ransomware occurrence.\n\n Further development is made to see how to stop encryption in files and directories that are potentially susceptible to ransomware. Each member of the team focused on a specific attribute of ransomware to monitor and implemented a module in python. After implementation and testing, the modules were combined to create a cohesive software.\n\n The software was tested against various academic ransomwares and had an efficiency rate of 73% which the team was satisfied with. The team has effectively created an anti-ransomware software and identified key pivotal points in ransomware software.\n\nThe research gave me insight on the methodology of how academic research is conducted along with the steps for implementation of software in a team-based environment."
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "csse-2-245",
            "title": "Collaboration in MeTILDA",
            "studentName": "Stuart Strom",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Min Chen",
            "posterLink": "./posters/csse/strom_stuart.jpg",
            "abstract": "The project I have been working on with graduate student Sanjay Panmetsa, is called MeTILDA (Melodic Transcription in Language Documentation and Analysis). It is used for teaching, documenting, and analyzing endangered languages such as Blackfoot. The website is run using a Flask backend and a React front end that communicates via RESTful API calls. \n\nMy first step was to learn how React works. Then I began determining how the website functions. \n\nOur goal was to implement the ability for users to share their “Create” page between users, which will enhance learning through collaboration. In the MeTILDA  “Create” page, users can upload audio files and select syllables from the files to analyze.\n\n First, I worked on adding a button for sharing the page into the render portion of the main component, “CreatePitchArt.” Then I figured out how to redirect to the shared page when the button was clicked, which required adding the history object from the React router library to the props. Next, I researched how to access the Firebase Realtime Database, and made methods for writing and updating data, creating new references, and deleting shared page references. We chose to use Firebase because it was already being used for authentication. \n\nWith the ability to create the shared page reference and pass in the “CreatePitchArt” state completed, the goal became creating a method to listen for data changes. This proved to be a challenge because of bugs that had to be fixed. To implement these changes, we added new variables to the state, one to track if the page is being shared and another for owner username. Sharing the owner username was done to allow files to be shared. The method also required a method to be added to React-Redux to update the speakers.\n\n We were able to complete page sharing between users, although there is a bug, it is not expected to be a problem when tested on the staging cite.\n\n Endangered languages are an essential part human history that encapsulate cultures and ideas that must not be lost. This work is going to be instrumental in the teaching of endangered languages, as it takes the already unique pitch perception analysis of MeTILDA and makes it shareable. "
        },
        {
            "time": "3:00 PM - 3:15 PM",
            "projectId": "csse-2-300",
            "title": "AI/ML University Internship at Apple",
            "studentName": "Rees Anderson",
            "studentMajor": "CSSE",
            "projectType": "Internship - Apple",
            "facultyAdvisor": "Dr. Munehiro Fukuda",
            "posterLink": "./posters/csse/anderson_rees_p.png",
            "abstract": "My capstone marks the midpoint of an ongoing internship at Apple that will run into late September. I was brought into Apple’s Artificial Intelligence and Machine Learning (AI/ML) organization as part of the AI/ML University team. The AI/ML University team is responsible for creating and leading internal technical trainings, classes, and tutorials. These provide onboarding and ongoing learning opportunities across the global AI/ML organization, while shaping an Apple culture of belonging, support, development, and flexibility.\n\nIn my time at Apple so far, I’ve had the opportunity to understand the technologies behind some of the world’s most recognizable products and work with the incredible people that make it all possible. I’ve learned a great amount from my short time at Apple and I’m looking forward to everything I’ll learn before it’s over.\n\n In my first couple of months I’ve created a tutorial for a new internal software tool. Thorough preparation and several iterations of writing have delivered an educational tutorial that is both interesting and engaging. With the first draft complete, I was then able to instruct the first rollout of the tutorial to a class, where I helped guide students when they were having trouble or they had questions. The feedback gained from this class will be very helpful in improving both the tutorial and application in the future.\n\nI’m now moving on to a programming project that will involve helping the development of the application I wrote the tutorial for. So, I’ve been spending a lot of time becoming acquainted with the internal development pipeline, the Xcode IDE, and the Swift programming language. This project will help add highly requested features to the application and will allow me to gain hands-on experience developing software in the industry.\n\nThe amount of experience I’ve gained over the summer so far has been incredible. The technologies I’ve learned and the people I’ve met have really made my experience more than I ever could have hoped for. I’ve really enjoyed the work I’ve done so far, and I’m looking forward to what comes next. Regardless of if I get to keep doing my best work for Apple, or fate sends me down a different path, the work I’ve done, the people I’ve met, and the memories I’ve made will forever hold a special place in my heart."
        }               
    ]
}