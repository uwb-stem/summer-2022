{
    "csse": [
        {
            "time": "12:45 PM - 1:00 PM",
            "projectId": "csse-4-1245",
            "title": "Employee Voice Survey Web Application",
            "studentName": "Viktoryia Simakova",
            "studentMajor": "CSSE",
            "projectType": "Internship - UKG",
            "facultyAdvisor": "Dr. Jeffrey Kim",
            "posterLink": "./posters/csse/simakova_viktoryia.jpg",
            "abstract": "This final report will focus on my UKG internship experience as a TechStar Intern inspring-summer 2022. During my internship, I had an opportunity to take part in the challengingproblem of upgrading the Employee Voice survey app with a new version of Flask. With thecompletion of the project, I realized how huge a problem it can be to upgrade the version of theframework in the application. Employee Voice is a powerful conversational survey tool thatanalyzes both structured and unstructured data and gives access to real-time information sothey can make decisions to improve lives and work for all leaders. This application needed to beupgraded with a new version of Flask in order to be more reliable. Thanks to the experiencegained during the course work and gained during the internship, I was able to successfullycomplete the parts of the project assigned to me. I had to keep track of the team's constantupdates and changes made to our application code, as well as work on finding and fixing bugsthat occur after upgrading the application with a new version of Flask. My contribution to thisproject allowed the team to work out the problem areas in the Monkey Patch code associatedwith the upgrade more quickly and efficiently. At the end of the internship, most of the bugs inthe code were worked out and fixed with a few minor bugs remaining and the team expectedcompletion of the final ticket intended for the actual application upgrade. The results helped thedevelopers on the team get closer to completing the app upgrade problem much faster andmore efficiently. This document covers the context of this project, development steps and finaldeliverables. In addition, it will give an idea of   the difficulties I have encountered and the lessonslearned."
        },
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "csse-4-100",
            "title": "Developing a Command to Fetch Firmware Version & Build Date",
            "studentName": "Effy Borath",
            "studentMajor": "CSSE",
            "projectType": "Internship - Mediatek",
            "facultyAdvisor": "Dr. Marc Dupius",
            "posterLink": "./posters/csse/borath_effy.png",
            "abstract": "For my capstone project in Summer 2022, I worked as a Software Engineer Intern at MediaTek. MediaTek is a semiconductor company based in San Jose, California that powers chipsets for home entertainment products, like Alexa, Sonos Speakers, smartphone processors, TVs, Xbox, etc. MediaTek is also one of the few companies that successfully worked on the newest Wi-Fi generation, WiFi-7. Wi-Fi 7 is an extremely high throughput wireless network that will enable really fast internet speeds and will reduce a lot of latencies.\n\nMy goal for my capstone is to get a better feel of how to approach the daily work in software engineering, as well as work on a project that has a high impact on real-world applications.\n\nI was a software engineer on MediaTek’s Wi-Fi team, which is responsible for getting the new generation WiFi to work smoothly with our chipset and also across all the testing devices and responsible for dealing with problems(bugs in the chipset) that we receive from stakeholders(like Amazon, SpaceX, Sonos, Microsoft). I designed and developed a command for the user to be able to fetch the firmware version and the firmware build date. I worked with many different tools and technologies, such as open-source Linux, GitLab, C code, Linux commands, TFTP, and TeraTerm.\n\nDuring my internship, I got to learn a lot about C code and also got the opportunity to go test the internet connection and such at a lab. My intern project used C code to mainly fetch the version and the build date of the firmware to the user. After coding everything in C and compiling everything successfully, I also needed to plug in the board of the chip and made sure that the program was able to fetch the accurate data of the chip. With the additional research on my own and some help from my mentor, I was able to finish the project and submit my code to the team in week 6 of my internship. As a result of my project, the command was able to be incorporated into other commands that my team has worked on. The user now is able to fetch the firmware version along with the firmware build date.\n\nMy internship at MediaTek helped me improve as a software engineer and introduced me to a rapidly growing company. My team was impressed with my fast-learning, problem-solving, and team-collaborating skills that they are more than happy to have me on the team. The key takeaway is that learning fast, asking a lot of questions, and not being stuck on the same problem for too long are the most important skills in the software engineering industry."
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "csse-4-115",
            "title": "Vinyl Trax",
            "studentName": "Sage Walsh",
            "studentMajor": "CSSE",
            "projectType": "Group Project",
            "facultyAdvisor": "Dr. Jeffrey Kim",
            "posterLink": "./posters/csse/walsh_sage.jpg",
            "abstract": "As your physical music collection grows in size, it can be difficult to remember everything you have bought. It has happened too many times, where a collector gets all the way home before realizing they already own the record, they bought that day. This is why we created an application on both iOS and Android platforms to help track someone’s music collection. Something easily accessible and portable so that the collector can bring it with them to the store and stop themselves before accidentally buying a duplicate album. \n\nOur application tracks both vinyl and compact disc (CD) collections as well as albums someone might want to buy in the future. To find an album, they bought in the real world and add it to their digitally tracked collection or Wishlist, our customers are able to search a database with hundreds of millions of existing albums spread across millions of artists. For convenience, they can search in a variety of ways: by scanning the album’s barcode, by taking a picture of the album cover, or by searching for an artist, album, or song name in a text bar. As collectors often like to know more information about the specific records they own, the app also allows them to add notes and pressing data about their record once it is in their inventory.\n\nWe were able to use Flutter to create an app on both platforms simultaneously. We also used the services of multiple APIs to implement our search functionality, including Spotify, Discogs, and Google Vision. We used a NoSQL real-time database to store a user’s inventory, Wishlist, and basic data that we connected to via Google’s Firebase API. The application will be deployed on app stores so that our stakeholders can download and use our product. The goal of the app is to help people track what they already own so they don’t accidentally purchase the same record twice. It is also to help remember albums they were interested in and haven’t purchased yet, so they don’t have to mindlessly wander around record stores."
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "csse-4-130",
            "title": "Vinyl Trax",
            "studentName": "Yoel Gebrehiwet",
            "studentMajor": "CSSE",
            "projectType": "Group Project",
            "facultyAdvisor": "Dr. Geetha Thamilarasu",
            "posterLink": "./posters/csse/gebrehiwet_yoel.jpg",
            "abstract": "As your physical music collection grows in size, it can be difficult to remember everything you have bought. It has happened too many times, where a collector gets all the way home before realizing they already own the record, they bought that day. This is why we created an application on both iOS and Android platforms to help track someone’s music collection. Something easily accessible and portable so that the collector can bring it with them to the store and stop themselves before accidentally buying a duplicate album. \n\nOur application tracks both vinyl and compact disc (CD) collections as well as albums someone might want to buy in the future. To find an album, they bought in the real world and add it to their digitally tracked collection or Wishlist, our customers are able to search a database with hundreds of millions of existing albums spread across millions of artists. For convenience, they can search in a variety of ways: by scanning the album’s barcode, by taking a picture of the album cover, or by searching for an artist, album, or song name in a text bar. As collectors often like to know more information about the specific records they own, the app also allows them to add notes and pressing data about their record once it is in their inventory.\n\nWe were able to use Flutter to create an app on both platforms simultaneously. We also used the services of multiple APIs to implement our search functionality, including Spotify, Discogs, and Google Vision. We used a NoSQL real-time database to store a user’s inventory, Wishlist, and basic data that we connected to via Google’s Firebase API. The application will be deployed on app stores so that our stakeholders can download and use our product. The goal of the app is to help people track what they already own so they don’t accidentally purchase the same record twice. It is also to help remember albums they were interested in and haven’t purchased yet, so they don’t have to mindlessly wander around record stores."
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "csse-4-145",
            "title": "Mukja",
            "studentName": "Jongseok Jung Park",
            "studentMajor": "CSSE",
            "projectType": "Individual Project",
            "facultyAdvisor": "Dr. Marc Dupius",
            "posterLink": "./posters/csse/jung_jongseok.png",
            "abstract": "University students face many challenges and obstacles when they decide to move out from their family house to live in a university dorm or apartment with their friends. One of the challenges is figuring out what to eat and it can be difficult for students to know what they can cook with ingredients they have. Most of the time, they ended up eating out or ordering to-go foods. So for my capstone, I chose to create an iOS application, called Mukja, that helps university students cook. The purpose of this application was to provide a practical and accessible application that students can use to find out what they can cook with ingredients they have.\n\n For this application, I used Google Firebase for user authentication and database services. Firebase Authentication provides SDKs to authenticate users without complicated back-end code. I utilized Firebase Authentication for users to register and login with their email. I also used Firebase FireStore for the database of this application. I created two separate databases for users and recipes. Users’ ingredients and favorite recipes are stored in the user database and all recipes are stored in the recipe database. For the design aspect, I used Figma for designing a UI and creating a prototype. Swift and SwiftUI were used to program the front-end and back-end of this application with Xcode as the IDE.\n\nFrom this capstone experience, I was able to stimulate full-stack development of an iOS application by utilizing online resources and acquiring knowledge and skills to build an iOS application in a short amount of time. Additionally, I implemented a functional iOS application that users can use to upload, save, and view recipes on their personal devices."
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "csse-4-200",
            "title": "GenCyber Virtual Camp: Teaching Cybersecurity Topics to 7th through 12th Grade Students",
            "studentName": "Jason Dekema",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Marc Dupius",
            "posterLink": "./posters/csse/dekema_jason_p.png",
            "abstract": "For my capstone, I worked as a Student Leader for the GenCyber Virtual Camp hosted by UW Bothell, led by Professor Marc Dupuis. As a Student Leader, I was responsible for leading two different small groups of 7th through 12th grade students during a week long virtual camp where they learned about cybersecurity topics through various activities. These activities included hands on demonstrations of various cybersecurity tools, as well as more abstract discussions, such as ethics in hacking.\n\nThe primary goal of the camp is to ignite interest in students in learning about and pursuing opportunities in cybersecurity. GenCyber aims to do this by increasing students’ awareness of cybersecurity pathways and career options, and to increase student diversity within those pathways. Although the camp itself only lasts a week, students are directed and encouraged to participate in other cybersecurity events. Even if a student doesn’t pursue these opportunities, they will hopefully be able to use the knowledge they’ve gained to improve their ‘cybersecurity hygiene’.\n\nStudents at the camp showed a high level of engagement and enthusiasm about the content, especially with the hands-on activities. Each student was provided with a free Raspberry Pi with Kali Linux. On a technical level, most students were able to complete activities that involved the Pi. Students within my group were highly interested in the programs that we used and were theorizing together about how the programs worked and what real world applications they may have.\n\n Overall, the camp served as a safe and open space for young students to learn about and engage with cybersecurity topics. Within this controlled environment, students could explore cybersecurity in ways that they might not have felt comfortable doing otherwise – such as attempting to create phishing emails, cracking passwords, or anything else that might be deemed ‘suspicious’ if done outside of a professional setting. There is no proper substitute for hands-on experience, and by allowing students to do just that, we have hopefully sparked the interest of the next generation of cybersecurity professionals."
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "csse-4-215",
            "title": "Password Manager Assistance Tool",
            "studentName": "Colin Mandt",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Dr. Marc Dupius",
            "posterLink": "./posters/csse/mandt_colin_nathaniel.png",
            "abstract": "The goal of this project was to create a tool to help people, especially those who are unfamiliar with technology, to begin using a password manager to protect themselves and their accounts from being broken into. Password managers are effective tools that help people use strong, unique passwords to protect their accounts. However, due to either unfounded fear or ignorance, many people still don’t use password managers.\n\nThe time spent during the capstone was used to implement the Password Manager Assistance Tool as a website. Videos were created to introduce users to password managers, explain how they work, and teach users how to install and use their specific password managers. Special care was taken during the work to make sure all information on the website was accessible to all readers regardless of their level of comfort or competence with technology and computers.\n\nThe result of the time and work done during this capstone was the creation of a website that contains information about password managers that can help people begin using password managers. It also resulted in the creation of many videos containing useful information about password managers as well as detailed tutorials for installing and using 5 different password managers that are recommended by the website.\n\nThis work is significant because it can be used to help people begin using password managers. Sending someone a simple link to the website should be all it takes to get that person to begin using a password manager, and therefore be safer online."
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "csse-4-230",
            "title": "Teaching Tools: Bridging the Canvas and Google APIs",
            "studentName": "Adam Deehring",
            "studentMajor": "CSSE",
            "projectType": "Faculty Research",
            "facultyAdvisor": "Mr. Mark Kochanski",
            "posterLink": "./posters/csse/deehring_adam_j.png",
            "abstract": "Canvas has become a crucial technology in the current educational system, and in order to stay relevant, it must be improved upon. With the ever-increasing capability and that of our reliance on cloud storage, Teaching Tools, a Canvas LTI application, aims to start bridging the gap between Google Drive and Canvas. By connecting Google Drive and Canvas via their respective APIs, we are able to increase the functionality of Canvas, giving Professors useful tools they need to that eliminate repetitive and redundant tasks. A repetitive task that can eliminated via this application is sharing a Google Drive document with the students in a given course, which can be monotonous depending on the size of the course, because you would have to type all of those email addresses manually, whereas with Teaching Tools it becomes a single button operation. \n\n I picked up where my fellow classmates left off, a functional website with several features implemented, continuing with development as a “Full Stack” Developer. The website’s frontend was built with React, using MUI components for the user interface elements. Python was utilized as the backend of the website, handling the connection of the Google Drives API and the Canvas API. Flask, the web framework, was used to establish the connection between the React Front End and the Python Back End. \n\n By the end of the quarter, I was able to increase the amount of file types that could be transferred, improved how you selected the files on Google Drive, improved the sharing of Google Drive files and folder by leveraging Canvas, increased organizability of both Canvas and Google drives via the website, and improved the user experience of the frontend, such as adding tooltips and descriptive icons to the sidebar. I also spent some time refactoring and reorganizing the existing code, decreasing the amount of repetitive code and grouping similar functions together. My contribution to Teaching Tools has brought the project closer to going live, and subsequently be able to improve how Professors can use Canvas. "
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "csse-4-245",
            "title": "Payment and Tax APIs at Amazon",
            "studentName": "Abood Vakil",
            "studentMajor": "CSSE",
            "projectType": "Internship - Amazon",
            "facultyAdvisor": "Mr. Mark Kochanski",
            "posterLink": "./posters/csse/vakil.jpg",
            "abstract": "From early May to mid July of this summer, I interned as a software development engineer at Amazon. More specifically, I interned on the team in charge of facilitating payments for any Amazon ads related payment. This experience allowed me to spend 12 weeks working on a team of experienced software engineers solving real world problems pertaining to ads payments. My primary goal throughout my internship was to learn as much as possible from my team members and deliver my assigned tasks to the best of my abilities. \n\nDuring my internship, aside from a few simple tasks to get used to the software development flow of my team, I was assigned two primary tasks. One of these tasks was to integrate a new already implemented API into our billing/payment flow. The purpose of this API is to return the tax information for any transaction that is passed to the API in the request. My other primary task was to implement an API to return the feedback of an invoice payment from our downstream credit card payment processor to our upstream invoicing system. \n\nThe first task needed to be completed because the previous API we had in place was being deprecated by our sister team since it was not compatible with our new payment flow. The second task needed to be completed because our sister team requested this API to be implemented since they needed the payment collection feedback for a task in one of their services. Throughout the internship, I gained a lot of valuable experience in the computer science field. I gained experience with languages and tools like Java, AWS Lambda, AWS DynamoDB, TypeScript, AWS Cloudwatch, AWS API Gateway, IntelliJ, etc. I also learned a lot about the best practices in producing enterprise level code, such as writing unit tests, following my team’s code formatting policy, using Git for source control appropriately, and communicating my questions and status to team members as best I can. \n\nOverall, I had a great experience at Amazon this summer. It was very rewarding to see my projects go into production and even start to be used almost immediately. The tasks I completed were high priorities for my team and I am glad that I was able to deliver on those priorities. "
        }
                      
    ]
}